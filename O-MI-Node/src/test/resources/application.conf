akka {
  loglevel = DEBUG
  stdout-loglevel = WARNING
  loggers = [] # TODO: setup clean stdout logger?

  log-dead-letters-during-shutdown = off
  jvm-exit-on-fatal-error = off

  persistence {
    journal {
      plugin = "akka.persistence.journal.inmem"
      auto-start-journals = ["akka.persistence.journal.inmem"]
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
      local.dir = "./target/test/snapshots"
    }
  }
}
omi-service {
    callback-authorization-enabled = true
    callbackz-authorization-enabled = true

    callback-timeout    = 10 s

    num-latest-values-stored = 10
    trim-interval       = 2 minutes
    
    authAPI.v1.enable-external-authorization-service = false
    authAPI.v2.enable = false

    input-whitelist-ips=[	
	"127.0.0.1", 
	"0:0:0:0:0:0:0:1" 
    ]
    input-whitelist-subnets = [
	"127.0.0.0/8"
	"0:0:0:0:0:0:0:0/48"
    ]
    input-whitelist-users = [
        "myself@testshib.org"
    ]
}

agent-system.internal-agents = []

slick-conf = {
  url = "jdbc:h2:mem:test"
  driver = "org.h2.Driver"
  connectionPool = disabled
  connectionTestQuery = "VALUES (1);"
}
warp10 {
  address = "http://127.0.0.1:8280/api/v0/"
  read-token = "YOUR-READ-TOKEN"
  write-token = "YOUR-WRITE-TOKEN"
}
warp10-config {

  address = "http://127.0.0.1:8280/api/v0/"
  read-token = "YOUR-OWN-READ-TOKEN"
  write-token = "YOUR-OWN-WRITE-TOKEN"
}
influxDB-config {
  database-name = "testdb"
  address = "http://localhost:8086/"
}

# Settings for input data pushing
bounded-mailbox {

    # Type of queue for waiting write requests (from external and internal agents)
    # Use "akka.dispatch.BoundedMailbox" for slowing agents with blocking if queue is full
    # Use "akka.dispatch.NonBlockingBoundedMailbox" for discarding write requests if queue is full
    # Use "akka.dispatch.UnBoundedMailbox" for max ram memory limited queue, crashing the server if queue is full
    mailbox-type = "akka.dispatch.BoundedMailbox"

    # Limit for queue 
    mailbox-capacity = 1000

    # max push wait time if capacity limit is reached
    mailbox-push-timeout-time = 10s
}

# Set mailbox for input data pushing, shouldn't need to be changed
akka.actor.mailbox.requirements {
   "akka.dispatch.BoundedMessageQueueSemantics" = bounded-mailbox
}

journalDBs {
  write-to-disk = false
}

