<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2012 rel. 2 (x64) (http://www.altova.com) by Kary FrÃ¤mling (Aalto University) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.opengroup.org/xsd/omi/1.0/" targetNamespace="http://www.opengroup.org/xsd/omi/1.0/" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xs:element name="omiEnvelope" type="OmiEnvelopeType">
		<xs:annotation>
			<xs:documentation>Root element of Open Messaging Interface.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="OmiEnvelopeType">
		<xs:sequence>
			<xs:choice>
				<xs:element name="read" type="ReadRequestType"/>
				<xs:element name="write" type="WriteRequestType"/>
				<xs:element name="response" type="ResponseListType"/>
				<xs:element name="cancel" type="CancelRequestType"/>
				<xs:element name="call" type="CallRequestType"/>
				<xs:element name="delete" type="DeleteRequestType"/>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="version" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Open messaging interface schema version that the message complies with.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ttl" use="required">
			<xs:annotation>
				<xs:documentation>Time-to-live in seconds. "-1" signifies "forever"</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:union memberTypes="PositiveDouble DoubleMinusOne"/>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="PositiveDouble">
		<xs:restriction base="xs:double">
			<xs:minInclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DoubleMinusOne">
		<xs:restriction base="xs:double">
			<xs:minInclusive value="-1"/>
			<xs:maxInclusive value="-1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DoubleMinusTwo">
		<xs:restriction base="xs:double">
			<xs:minInclusive value="-2"/>
			<xs:maxInclusive value="-2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="MsgType" mixed="true">
		<xs:annotation>
			<xs:documentation>Payload for the protocol</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RequestBaseType" abstract="true">
		<xs:annotation>
			<xs:documentation>Base type for "read" and "write" requests.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nodeList" type="NodesType" minOccurs="0"/>
			<xs:element name="requestID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>"requestID" is only included when "polling" for data that corresponds to an earlier subscription that returned the corresponding Id.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="msg" type="MsgType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="callback" type="xs:anyURI" use="optional">
			<xs:annotation>
				<xs:documentation>URI of callback O-MI node where responses should be sent.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="msgformat" type="SchemaIDType" use="optional"/>
		<xs:attribute name="targetType" type="TargetTypeType" use="optional" default="node"/>
	</xs:complexType>
	<xs:simpleType name="TargetTypeType">
		<xs:annotation>
			<xs:documentation>Using "device" indicates that if the message "target object" is some kind of device connected to a node, then try to get the requested value from the "device".</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="device"/>
			<xs:enumeration value="node"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ReadRequestType">
		<xs:complexContent>
			<xs:extension base="RequestBaseType">
				<xs:attribute name="interval" use="optional">
					<xs:annotation>
						<xs:documentation>
              If an "interval" attribute is included, it indicates that this is a subscription request that uses the given interval.
              Values 0 (as often as data can be read from the target),
              -1 (very time the subscribed target publishes/pushes a new value)
              and -2 (every time the subscribed target (typically a PEID or device) connects to an O-MI node)
              have special significations.
            </xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:union memberTypes="PositiveDouble DoubleMinusOne DoubleMinusTwo"/>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="oldest" type="xs:positiveInteger" use="optional">
					<xs:annotation>
						<xs:documentation>Retrieve the oldest available number of historical data available.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="begin" type="xs:dateTime" use="optional">
					<xs:annotation>
						<xs:documentation>Retrieve data from this begin date.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="end" type="xs:dateTime" use="optional">
					<xs:annotation>
						<xs:documentation>Retrieve data until this end date.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="newest" type="xs:positiveInteger" use="optional">
					<xs:annotation>
						<xs:documentation>Retrieve the newest available number of historical data available</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="all" type="xs:boolean" use="optional">
					<xs:annotation>
						<xs:documentation>Retrieve all available values. all="true" overrides other begin/end/oldest/newest attributes. From Version 2.0 onwards.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="SchemaIDType">
		<xs:annotation>
			<xs:documentation>Some "predefined" identifier for the format/semantics of "value", e.g. "csv", "obix.xsd".</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="WriteRequestType">
		<xs:complexContent>
			<xs:extension base="RequestBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ResponseListType">
		<xs:annotation>
			<xs:documentation>List of results.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="result" type="RequestResultType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CallRequestType">
		<xs:annotation>
			<xs:documentation>Call request type.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RequestBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DeleteRequestType">
		<xs:annotation>
			<xs:documentation>Delete request type.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="RequestBaseType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RequestResultType">
		<xs:annotation>
			<xs:documentation>Result of a request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="return" type="ReturnType" minOccurs="1">
				<xs:annotation>
					<xs:documentation>Indicates success/failure of request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="requestID" type="IdType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>not needed if this is a response to a "immediate"/"non-callback" request, i.e. just status reply with "return" or reponse with "value".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="msg" type="MsgType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>response value. Completely free-format. Present if successful.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="nodeList" type="NodesType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>may be used to indicate from what node(s) the result comes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="omiEnvelope" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Present if the sender wants to submit a new request to the receiver. This is useful for engaging direct dialogs" while the connection is alive. It is also especially useful for communicating with firewall/NAT-protected nodes.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="msgformat" type="SchemaIDType" use="optional"/>
		<xs:attribute name="targetType" type="TargetTypeType" use="optional" default="node"/>
	</xs:complexType>
	<xs:complexType name="ReturnType">
		<xs:annotation>
			<xs:documentation>Return status of request. Use HTTP codes / descriptions when applicable.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="returnCode" use="required">
					<xs:annotation>
						<xs:documentation>Use HTTP codes when applicable.</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:token">
							<xs:pattern value="2[0-9]{2}|4[0-9]{2}|5[0-9]{2}|6[0-9]{2}"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="description" type="xs:string" use="optional"/>
                                <xs:anyAttribute processContents="lax" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="NodesType">
		<xs:annotation>
			<xs:documentation>The nodesType is used anywhere in the schema where lists of nodes can appear. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="node" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Defines the URL/URI of an O-MI node. The node may be located using other means than this URL field, like discovery and routing functionality.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="type" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>String indicating what format is being used for "node" addresses. By default a URL. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="IdType">
		<xs:annotation>
			<xs:documentation>Some kind of identifier with optional "format" attribute for indicating what kind of identifier is used. </xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="format" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>Use for indicating what kind of identifier.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="CancelRequestType">
		<xs:sequence>
			<xs:element name="nodeList" type="NodesType" minOccurs="0"/>
			<xs:element name="requestID" type="IdType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
