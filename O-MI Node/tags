!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
URLHighlightOverlay	html/webclient/js/initialize.coffee	/^  URLHighlightOverlay =$/;"	v
a	html/webclient/js/initialize.coffee	/^      a = s.replace(',', '.')$/;"	v
addValueToAll	html/webclient/js/requests.coffee	/^  addValueToAll = (doc) ->$/;"	f
addValueWhenWrite	html/webclient/js/requests.coffee	/^  addValueWhenWrite = (odfInfoItem) ->$/;"	f
afterWaits	html/webclient/js/initialize.coffee	/^  afterWaits = []$/;"	v
arr	html/webclient/js/newInfoItemForm.coffee	/^    arr = []$/;"	v
basicInput	html/webclient/js/initialize.coffee	/^    basicInput = (selector, validator=validators.nonEmpty) ->$/;"	f
cloneAbove	html/webclient/js/newInfoItemForm.coffee	/^  cloneAbove = ->$/;"	f
closetime	html/webclient/js/formlogic.coffee	/^        closetime = 1500 # ms to close Objects jstree$/;"	v
constsExt	html/webclient/js/initialize.coffee	/^constsExt = ($, parent) ->$/;"	f
contentType	html/webclient/js/formlogic.coffee	/^      contentType: "text\/xml"$/;"	p
createNode	html/webclient/js/initialize.coffee	/^    createNode = (particle, odfName, treeTypeName, defaultId) ->$/;"	f
createOdf	html/webclient/js/omi.coffee	/^  createOdf = (elem, doc) ->$/;"	f
createdElem	html/webclient/js/omi.coffee	/^    createdElem = createOdf "Object", doc$/;"	v
currentObjectsHead	html/webclient/js/requests.coffee	/^          currentObjectsHead = o.evaluateXPath(req, '\/\/odf:Objects')[0]$/;"	v
currentOdfNode	html/webclient/js/requests.coffee	/^        currentOdfNode = maybeChild$/;"	v
currentOdfNode	html/webclient/js/requests.coffee	/^        currentOdfNode = odfElem$/;"	v
currentOdfNode	html/webclient/js/requests.coffee	/^    currentOdfNode = odfObjects$/;"	v
currentParams	html/webclient/js/requests.coffee	/^      currentParams = omiRequestObject$/;"	v
currentParams	html/webclient/js/requests.coffee	/^  currentParams = my.defaults.empty()$/;"	v
currentReq	html/webclient/js/requests.coffee	/^          currentReq = WebOmi.omi.evaluateXPath($/;"	v
data	html/webclient/js/formlogic.coffee	/^      data: request$/;"	p
dataType	html/webclient/js/formlogic.coffee	/^      dataType: "text"$/;"	p
error	html/webclient/js/formlogic.coffee	/^      error: (response) ->$/;"	f
error	html/webclient/js/formlogic.coffee	/^      error: (response) ->$/;"	p
evaluateXPath	html/webclient/js/formlogic.coffee	/^    evaluateXPath = WebOmi.omi.evaluateXPath$/;"	v
existingIDs	html/webclient/js/requests.coffee	/^            existingIDs = o.evaluateXPath doc, "\/\/omi:requestID"$/;"	v
fl	html/webclient/js/requests.coffee	/^        fl = WebOmi.formLogic$/;"	v
formLogicExt	html/webclient/js/formlogic.coffee	/^formLogicExt = ($, WebOmi) ->$/;"	f
genData	html/webclient/js/formlogic.coffee	/^    genData = (xmlNode, parentPath) ->$/;"	f
getGroups	html/webclient/js/newInfoItemForm.coffee	/^  getGroups = (ofWhat, requiredField) ->$/;"	f
head	html/webclient/js/omi.coffee	/^        head = my.evaluateXPath(xmlNode, '.\/odf:id')[0]$/;"	v
idElem	html/webclient/js/omi.coffee	/^    idElem      = createOdf "id", doc$/;"	v
infoitemData	html/webclient/js/newInfoItemForm.coffee	/^        infoitemData = readValues()$/;"	v
interval	html/webclient/js/requests.coffee	/^      interval: 5$/;"	p
isReadReq	html/webclient/js/formlogic.coffee	/^          isReadReq = switch reqName$/;"	v
isRequestIdReq	html/webclient/js/formlogic.coffee	/^          isRequestIdReq = switch reqName$/;"	v
lastOdfElem	html/webclient/js/requests.coffee	/^        lastOdfElem = maybeChild$/;"	v
lastOdfElem	html/webclient/js/requests.coffee	/^    lastOdfElem = odfObjects$/;"	v
lineNumbers	html/webclient/js/initialize.coffee	/^    lineNumbers: true$/;"	p
lineWrapping	html/webclient/js/initialize.coffee	/^    lineWrapping: true$/;"	p
locale	html/webclient/js/initialize.coffee	/^      locale: language$/;"	p
makeRequestUpdater	html/webclient/js/formlogic.coffee	/^    makeRequestUpdater = (input) ->$/;"	f
maybeChild	html/webclient/js/requests.coffee	/^      maybeChild = o.getOdfChild(id, lastOdfElem)$/;"	v
maybeId	html/webclient/js/omi.coffee	/^      maybeId = my.getOdfId(child)$/;"	v
maybeInsertBefore	html/webclient/js/requests.coffee	/^  maybeInsertBefore = (parent, beforeTarget, insertElem) ->$/;"	f
mementoTime	html/webclient/js/initialize.coffee	/^            mementoTime = @ref.data "DateTimePicker"$/;"	v
meta	html/webclient/js/requests.coffee	/^            meta = o.createOdfMetaData odfDoc$/;"	v
mode	html/webclient/js/initialize.coffee	/^    mode: "text\/xml"$/;"	p
msg	html/webclient/js/requests.coffee	/^            msg = o.evaluateXPath(req, "\/\/omi:msg")[0]$/;"	v
msg	html/webclient/js/requests.coffee	/^          msg = o.createOmi "msg", doc$/;"	v
my	html/webclient/js/formlogic.coffee	/^  my = WebOmi.formLogic = {}$/;"	v
my	html/webclient/js/omi.coffee	/^  my = WebOmi.omi = {}$/;"	v
my	html/webclient/js/requests.coffee	/^  my = WebOmi.requests = {}$/;"	v
name	html/webclient/js/formlogic.coffee	/^          name = WebOmi.omi.getOdfId(xmlNode) # FIXME: get$/;"	v
name	html/webclient/js/initialize.coffee	/^        name =$/;"	v
newHasMsg	html/webclient/js/formlogic.coffee	/^            newHasMsg = requests.defaults[reqName]().msg$/;"	v
newId	html/webclient/js/requests.coffee	/^                  newId = o.createOmi "requestID", doc$/;"	v
newReq	html/webclient/js/requests.coffee	/^          newReq = WebOmi.omi.createOmi reqName, doc$/;"	v
o	html/webclient/js/requests.coffee	/^        o = WebOmi.omi$/;"	v
o	html/webclient/js/requests.coffee	/^      o = WebOmi.omi$/;"	v
o	html/webclient/js/requests.coffee	/^    o = WebOmi.omi$/;"	v
objChildren	html/webclient/js/formlogic.coffee	/^    objChildren = (xmlNode) ->$/;"	f
object	html/webclient/js/requests.coffee	/^            object = o.createOdfObject odfDoc, id$/;"	v
objects	html/webclient/js/requests.coffee	/^            objects = o.createOdfObjects req$/;"	v
objectsArr	html/webclient/js/formlogic.coffee	/^    objectsArr = omi.evaluateXPath parsed, "\/\/odf:Objects"$/;"	v
obs	html/webclient/js/requests.coffee	/^          obs = o.createOdfObjects doc$/;"	v
obss	html/webclient/js/requests.coffee	/^          obss = WebOmi.omi.evaluateXPath(doc, "\/\/odf:Objects")$/;"	v
odfObjects	html/webclient/js/requests.coffee	/^          odfObjects = o.evaluateXPath(req, '\/\/odf:Objects')[0]$/;"	v
odfTreeNode	html/webclient/js/requests.coffee	/^            odfTreeNode = $ jqesc path$/;"	v
odfTreeNode	html/webclient/js/requests.coffee	/^          odfTreeNode = $ jqesc path$/;"	v
odfTreeNode	html/webclient/js/requests.coffee	/^        odfTreeNode = $ jqesc path$/;"	v
omi	html/webclient/js/formlogic.coffee	/^    omi = WebOmi.omi$/;"	v
omiExt	html/webclient/js/omi.coffee	/^omiExt = (WebOmi) ->$/;"	f
openOdfContextmenu	html/webclient/js/initialize.coffee	/^  openOdfContextmenu = (target) ->$/;"	f
processData	html/webclient/js/formlogic.coffee	/^      processData: false$/;"	p
readValues	html/webclient/js/newInfoItemForm.coffee	/^  readValues = ->$/;"	f
ref	html/webclient/js/initialize.coffee	/^            @ref.data "DateTimePicker"$/;"	e
ref	html/webclient/js/initialize.coffee	/^            @ref.on "dp.change", =>$/;"	e
ref	html/webclient/js/initialize.coffee	/^          @ref.jstree().get_selected[0]$/;"	e
ref	html/webclient/js/initialize.coffee	/^        @ref.on "input", =>  # =>: preserving this$/;"	e
removeValueFromAll	html/webclient/js/requests.coffee	/^  removeValueFromAll = (doc) ->$/;"	f
req	html/webclient/js/formlogic.coffee	/^    req = my.getRequest()$/;"	v
requestDoc	html/webclient/js/initialize.coffee	/^      requestDoc: # Maybe xml dom document$/;"	p
requestDoc	html/webclient/js/requests.coffee	/^    requestDoc: null  # Maybe xml dom document$/;"	p
requestID	html/webclient/js/initialize.coffee	/^      requestID: # Maybe int$/;"	p
requestID	html/webclient/js/requests.coffee	/^    requestID: # Maybe Int$/;"	p
requestID	html/webclient/js/requests.coffee	/^    requestID: null  # Maybe int$/;"	p
requestTip	html/webclient/js/initialize.coffee	/^    requestTip = (selector, text) ->$/;"	f
requestsExt	html/webclient/js/requests.coffee	/^requestsExt = (WebOmi) ->$/;"	f
res	html/webclient/js/initialize.coffee	/^        res = v c$/;"	v
results	html/webclient/js/newInfoItemForm.coffee	/^    results = {}$/;"	v
success	html/webclient/js/formlogic.coffee	/^      success: (response) ->$/;"	f
success	html/webclient/js/formlogic.coffee	/^      success: (response) ->$/;"	p
target	html/webclient/js/newInfoItemForm.coffee	/^    target = $ this$/;"	v
textElem	html/webclient/js/omi.coffee	/^    textElem    = doc.createTextNode(id)$/;"	v
token	html/webclient/js/initialize.coffee	/^    token: (stream, state) ->$/;"	f
token	html/webclient/js/initialize.coffee	/^    token: (stream, state) ->$/;"	p
tree	html/webclient/js/initialize.coffee	/^          tree = @ref.jstree()$/;"	v
type	html/webclient/js/formlogic.coffee	/^      type: "POST"$/;"	p
updateSetterForAttr	html/webclient/js/requests.coffee	/^  updateSetterForAttr = (name, attrParentXPath) ->$/;"	f
url	html/webclient/js/formlogic.coffee	/^      url: server$/;"	p
v	html/webclient/js/initialize.coffee	/^    v = validators$/;"	v
val	html/webclient/js/initialize.coffee	/^          val = @get()$/;"	v
val	html/webclient/js/requests.coffee	/^      val = WebOmi.omi.createOdfValue doc$/;"	v
validators	html/webclient/js/initialize.coffee	/^    validators = {}$/;"	v
vals	html/webclient/js/requests.coffee	/^    vals = WebOmi.omi.evaluateXPath doc, "\/\/odf:value"$/;"	v
value	html/webclient/js/newInfoItemForm.coffee	/^        value = {}$/;"	v
