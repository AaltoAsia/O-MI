// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package parsing 
package xmlGen
package xmlTypes


case class ObjectsType(ObjectValue: Seq[xmlTypes.ObjectType] = Vector.empty,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val version = attributes.get("@version") map { _.as[String]}
}

      


case class ObjectType(id: Seq[xmlTypes.QlmIDType] = Vector.empty,
  description: Seq[xmlTypes.DescriptionType] = Vector.empty,
  InfoItem: Seq[xmlTypes.InfoItemType] = Vector.empty,
  ObjectValue: Seq[xmlTypes.ObjectType] = Vector.empty,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val typeValue = attributes.get("@type") map { _.as[String]}
}

      


case class InfoItemType(iname: Seq[xmlTypes.QlmIDType] = Vector.empty,
  description: Seq[xmlTypes.DescriptionType] = Vector.empty,
  MetaData: Seq[xmlTypes.MetaDataType] = Vector.empty,
  value: Seq[xmlTypes.ValueType] = Vector.empty,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val name = attributes("@name").as[String]
  lazy val typeValue = attributes.get("@type") map { _.as[String]}
}

      


case class MetaDataType(InfoItem: Seq[xmlTypes.InfoItemType] = Vector.empty)
      


/** String with some"human-readable" text.
*/
case class DescriptionType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val lang = attributes.get("@lang") map { _.as[String]}
}

      


object QlmIDType{
  def createFromString(value: String) = QlmIDType(value)
}
case class QlmIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val idType = attributes.get("@idType") map { _.as[String]}
  lazy val tagType = attributes.get("@tagType") map { _.as[String]}
  lazy val startDate = attributes.get("@startDate") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
  lazy val endDate = attributes.get("@endDate") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
}

      


case class ValueType(mixed: Seq[scalaxb.DataRecord[Any]] = Vector.empty,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val dateTime = attributes.get("@dateTime") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
  lazy val unixTime = attributes.get("@unixTime") map { _.as[Long]}
}

      

